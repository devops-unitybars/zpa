## SonarQube compatibility

This release is compatible with SonarQube 9.9 LTA Community Edition and newer. However, comprehensive testing and validation have been conducted only on SonarQube 9.9 CE, 10.5 CE, and 10.6 CE. While compatibility is expected for other versions within this range, the full extent of functionality has been assured only for the tested versions.

Additionally, please note that while this version may work with SonarQube’s commercial editions, the compatibility was not tested and simultaneous analysis using ZPA and SonarSource’s embedded PL/SQL plugin is not supported. If you require this scenario, consider using [zpa-cli](https://github.com/felipebz/zpa-cli) instead.

## Highlights

### First-class support for test and coverage reports generated by utPLSQL

Two new properties specifically designed for consuming test and coverage reports generated by utPLSQL were added:

* `sonar.zpa.tests.reportPaths`: Use this property to specify the path to the test report(s) (generated using the `ut_sonar_test_reporter`).
* `sonar.zpa.coverage.reportPaths`: Similarly, this property allows you to specify the path to the coverage report(s) (generated using the `ut_coverage_sonar_reporter`).

Previously, importing test and coverage reports into SonarQube required [generic properties](https://docs.sonarsource.com/sonarqube/9.9/analyzing-source-code/test-coverage/generic-test-data/). However, with the introduction of these new properties, the ZPA plugin can now automatically associate the test and coverage results with the corresponding PL/SQL files. The best part? You won’t need to define any complex object-file mapping rules in the utPLSQL-cli.

By leveraging these properties, is much easier to integrate the utPLSQL reports into your SonarQube analysis pipeline. More information is available in the [documentation](https://github.com/felipebz/zpa/wiki/utPLSQL-integration).

## Install/update instructions

* Download the {{#f_release_download_url}}sonar-zpa-plugin-{{projectVersion}}.jar{{/f_release_download_url}} and copy it to the SONARQUBE_HOME/extensions/plugins.
* Remove the older plugin from that directory.
* Restart the SonarQube instance.

## For custom plugin developers

Binary compatibility is not guaranteed either in between any version number change. Custom plugins should be recompiled against the same version of `sonar-zpa-plugin`.

Download the {{#f_release_download_url}}zpa-toolkit-{{projectVersion}}.jar{{/f_release_download_url}} (requires Java 11+) to test the parser and view the AST.

## Full changelog

{{changelogChanges}}
